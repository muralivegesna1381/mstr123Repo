require_relative '../node_modules/react-native/scripts/react_native_pods'
require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'

$FirebaseSDKVersion = '8.13.0'
$RNFirebaseAsStaticFramework = true

platform :ios, '13.0'

target 'Wearables' do
  config = use_native_modules!
  
  use_react_native!(
                    :path => config[:reactNativePath],
                    # to enable hermes on iOS, change `false` to `true` and then install pods
                    :hermes_enabled => false
                    )
                    pod 'RNPhotoEditor', :path => '../node_modules/react-native-photo-editor/ios'
                    use_frameworks! :linkage => :static
                    pod 'iOSPhotoEditor', :git => 'https://github.com/prscX/photo-editor', :branch => 'master'
                    pod 'react-native-date-picker', :path => '../node_modules/react-native-date-picker'
                    pod 'RNPDF', :path => '../node_modules/react-native-view-pdf'
                    permissions_path = '../node_modules/react-native-permissions/ios'
                    pod 'Permission-LocationAlways', :path => "#{permissions_path}/LocationAlways/Permission-LocationAlways.podspec"
                    pod 'Permission-LocationWhenInUse', :path => "#{permissions_path}/LocationWhenInUse/Permission-LocationWhenInUse.podspec"
                    pod 'Permission-Camera', :path => "#{permissions_path}/Camera"
                    pod 'ZendeskSDKMessaging'
                    pod 'GoogleMLKit/ImageLabeling', '3.2.0'
                    pod 'react-native-image-sequence', :path => '../node_modules/react-native-image-sequence'
                    
                    target 'WearablesTests' do
                      inherit! :complete
                      # Pods for testing
                    end
                    
                    # Enables Flipper.
                    #
                    # Note that if you have use_frameworks! enabled, Flipper will not work and
                    # you should disable the next line.
                    use_flipper!()
                    
                    #post_install do |installer|
                    # react_native_post_install(installer)
                    #__apply_Xcode_12_5_M1_post_install_workaround(installer)
                    #end
                    
                    post_install do |installer|
                      react_native_post_install(installer)
                      __apply_Xcode_12_5_M1_post_install_workaround(installer)
                      
                      installer.pods_project.targets.each do |target|
                        target.build_configurations.each do |config|
                          config.build_settings['SWIFT_VERSION'] = '5'
                          config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '11.0'
                        end
                      end
                    end
                    
                    # Follow [Flipper iOS Setup Guidelines](https://fbflipper.com/docs/getting-started/ios-native)
                    # This is required because iOSPhotoEditor is implemented using Swift and we have to use use_frameworks! in Podfile
                    $static_framework = ['FlipperKit', 'Flipper', 'Flipper-Folly',
                    'CocoaAsyncSocket', 'ComponentKit', 'Flipper-DoubleConversion',
                    'Flipper-Glog', 'Flipper-PeerTalk', 'Flipper-RSocket', 'Yoga', 'YogaKit',
                    'CocoaLibEvent', 'OpenSSL-Universal', 'boost-for-react-native']
                    
                    pre_install do |installer|
                      Pod::Installer::Xcode::TargetValidator.send(:define_method, :verify_no_static_framework_transitive_dependencies) {}
                      installer.pod_targets.each do |pod|
                        # if $static_framework.include?(pod.name)
                        def pod.build_type;
                        Pod::BuildType.static_library
                      end
                      # end
                    end
end

end

